{% extends 'base.html.twig' %}

{% block title %}GEZZELING HOUDEN{% endblock %}

{% block body %}

{#    <button type="button" class="btn btn-outline-dark"><i class="bi bi-bag-heart">#}
{#            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bag-heart" viewBox="0 0 16 16">#}
{#                <path fill-rule="evenodd" d="M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5v-.5Zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0ZM14 14V5H2v9a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1ZM8 7.993c1.664-1.711 5.825 1.283 0 5.132-5.825-3.85-1.664-6.843 0-5.132Z"/>#}
{#            </svg>#}
{#        </i></button>#}
    <div class="container-fluid">
        <div class="row">
            {% for product in products %}
            <div class="col-3 mt-3">
                <div class="card" style="width: 18rem;">
                    <img src="..." class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">{{ product.name }}</h5>
                        <p class="card-text">{{ product.description }}</p>
                        <a href="javascript:void(0)" onclick="buy(this)" class="btn btn-primary buy-click" data-id="{{ product.id }}">Купить</a>
                        <div class="d-none" style="display: flex">
                            <a class="pointer">
                                <button data-id="{{ product.id }}" onclick="minus(this)" class="btn-hover">-</button>
                            </a>
                            <input data-id="{{ product.id }}" oninput="onInput(this)" type="number" value="0">
                            <a class="pointer">
                                <button data-id="{{ product.id }}" onclick="plus(this)" class="btn-hover">+</button>
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            {% endfor %}
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function(){
            let currentCart = JSON.parse(localStorage.getItem('cart'));
            document.querySelectorAll('.buy-click').forEach((item) => {
                if(currentCart[item.getAttribute('data-id')]) {
                    item.classList.add('d-none');
                    item.nextSibling.nextElementSibling.classList.remove('d-none');
                    item.nextSibling.nextElementSibling.querySelector('input').value = currentCart[item.getAttribute('data-id')];
                }
            });
        });
        console.log('start2');
        const buy = (_that) => {
            let localCart  = localStorage.getItem('cart');
            if (localCart) {
                localCart = JSON.parse(localCart);
                localCart[_that.getAttribute('data-id')] = 1;
            } else {
                localCart = {
                    [_that.getAttribute('data-id')]: 1
                };
            }
            localStorage.setItem('cart', JSON.stringify(localCart));
            _that.nextSibling.nextElementSibling.classList.remove('d-none');
            _that.nextSibling.nextElementSibling.querySelector('input').value = '1';
            _that.classList.add('d-none');
        }

        const minus = (_that) => {
            let localCart  = JSON.parse(localStorage.getItem('cart'));
            if (localCart[_that.getAttribute('data-id')] === 1) {
                delete localCart[_that.getAttribute('data-id')];
                _that.parentNode.parentNode.classList.add('d-none');
                _that.parentNode.parentNode.previousElementSibling.classList.remove('d-none');
            } else {
                localCart[_that.getAttribute('data-id')] = localCart[_that.getAttribute('data-id')] - 1;
                _that.parentNode.nextElementSibling.value = localCart[_that.getAttribute('data-id')];
            }
            localStorage.setItem('cart', JSON.stringify(localCart));
        }

        const plus = (_that) => {
            let localCart  = JSON.parse(localStorage.getItem('cart'));
            localCart[_that.getAttribute('data-id')] = localCart[_that.getAttribute('data-id')] + 1;
            localStorage.setItem('cart', JSON.stringify(localCart));
            _that.parentNode.previousElementSibling.value = localCart[_that.getAttribute('data-id')];
        };

        const onInput = (_that) => {
            let localCart  = JSON.parse(localStorage.getItem('cart'));
            if (_that.value === 0) {
                delete localCart[_that.getAttribute('data-id')];
                _that.parentNode.classList.add('d-none');
                _that.parentNode.previousElementSibling.classList.remove('d-none');
            } else {
                localCart[_that.getAttribute('data-id')] = Number(_that.value);
            }
            localStorage.setItem('cart', JSON.stringify(localCart));
        }

    </script>
{#    <style>#}

{#        .btn-hover{min-height: 10px; width: 25px; border-radius: 50%; border: 0px; background-color: rgb(255, 200, 148); font-family: "Source Sans Pro", sans-serif; font-size: 16px;}.btn-hover:hover{}#}
{#        .pointer {#}
{#            cursor: pointer;#}
{#        }#}
{#        .btn-outline-dark {#}
{#            position: fixed;#}
{#            height: 50px;#}
{#            width: 50px;#}
{#            top: 70px;#}
{#            right: 200px;#}
{#            z-index: 999999;#}
{#        }#}
{#    </style>#}
{% endblock %}
